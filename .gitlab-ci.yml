image: adoptopenjdk/maven-openjdk11:latest

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN"

stages:
  - build
  - package
  - deploy
  - release

cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
        - .m2/repository

before_script:
    - export MAVEN_USER_HOME=`pwd`/.maven
        
mvn-install:
    stage: build
    only:
      refs:
#        - develop
#        - master
#        - production
#        - tags
        - /^feature.*$/
#      variables:
#        - $FEATURE_NAME == null
    script:
      - 'mvn clean install -U -DskipTests -s ci_settings.xml'
#      - mkdir -p loa-app-spring-boot/target/dependency && (cd loa-app-spring-boot/target/dependency; jar -xf ../*.jar)
#    artifacts:
#      paths:
#          - loa-app-spring-boot/target/classes/
#          - loa-app-spring-boot/target/generated-sources/
#          - loa-app-spring-boot/target/dependency/
#     expire_in: 1 day

maven-site:
    stage: build
#    only:
#      refs:
#        - master
#        - production
#        - tags
#      variables:
#        - $FEATURE_NAME == null
    script:
      - 'mvn verify site:site site:stage -s ci_settings.xml'
    artifacts:
      paths:
          - target/staging

maven-deploy:
    stage: build
    only: # do not run on feature branch, because it's not  protected and the private.key will not be available!
      - develop
      - tags
    before_script:
        - gpg --version |grep gpg |cut -d " " -f 3
        - gpg --import public.key
        - gpg -v --import --no-tty --batch --yes <(echo "$SSH_PRIVATE_KEY")
    script:
        - mvn deploy -Ppublic-deploy_2 -s ci_settings.xml -Dgpg.passphrase=$passphrase
       
#build-push-image:
#  stage: package
#  image:
#    name: gcr.io/kaniko-project/executor:debug
#    entrypoint: [""]
#  script:
#    - mkdir -p /kaniko/.docker
#    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
#    - /kaniko/executor --context $CI_PROJECT_DIR/loa-app-spring-boot --dockerfile $CI_PROJECT_DIR/loa-app-spring-boot/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    
