image: maven:3.6.1-jdk-11

variables:
  MAVEN_OPTS: "--batch-mode -Dmaven.repo.local=maven.repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN"

stages:
  - build
  - deploy

cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
        - maven.repository/

#before_script:
 #   - export MAVEN_USER_HOME=`pwd`/.maven
        
mvn-install:
    stage: build
    only:
      refs:
        - /^feature.*$/
    script:
      - 'mvn clean install -U -DskipTests -s ci_settings.xml'
      - mkdir -p loa-app/loa-app-spring-boot/target/dependency && (cd loa-app/loa-app-spring-boot/target/dependency; jar -xf ../*.jar)
    artifacts:
      paths:
          - loa-app/loa-app-spring-boot/target/classes/
          - loa-app/loa-app-spring-boot/target/generated-sources/
          - loa-app/loa-app-spring-boot/target/dependency/
      expire_in: 1 day

maven-site:
    stage: deploy
    only: # do not run on feature branch, because it's not  protected and the private.key will not be available!
      - develop
      - tags
    script:
      - 'mvn verify site:site site:stage -s ci_settings.xml'
    artifacts:
      paths:
          - target/staging

maven-deploy:
    stage: build
    only: # do not run on feature branch, because it's not  protected and the private.key will not be available!
      - develop
      - tags
    before_script:
        - gpg --version |grep gpg |cut -d " " -f 3
        - gpg --import public.key
        - gpg -v --import --no-tty --batch --yes <(echo "$SSH_PRIVATE_KEY")
    script:
        - mvn deploy -Ppublic-deploy_2 -s ci_settings.xml -Dgpg.passphrase=$passphrase
        - mkdir -p loa-app/loa-app-spring-boot/target/dependency && (cd loa-app/loa-app-spring-boot/target/dependency; jar -xf ../app.jar)
    artifacts:
      paths:
          - loa-app/loa-app-spring-boot/target/classes/
          - loa-app/loa-app-spring-boot/target/generated-sources/
          - loa-app/loa-app-spring-boot/target/dependency/
      expire_in: 1 day
       
build-push-image:
  stage: deploy
  only:
    - /^feature.*$/
    - develop
    - tags
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - ls -lsa $CI_PROJECT_DIR/loa-app/loa-app-spring-boot
    - ls -lsa $CI_PROJECT_DIR/loa-app/loa-app-spring-boot/target
    - ls -lsa $CI_PROJECT_DIR/loa-app/loa-app-spring-boot/target/dependency
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR/loa-app/loa-app-spring-boot --dockerfile $CI_PROJECT_DIR/loa-app/loa-app-spring-boot/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    
